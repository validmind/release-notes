---
title: "Add new custom fields permissions API. (#1531)"
categories: [backend, 25.06, release, enhancement]
sidebar: release-notes
toc-expand: true
date: "May 30, 2025"
# Content overwritten from an earlier version - 2025-06-05 09:48
# PR URL: https://github.com/validmind/backend/pull/1531
---

New routes have been added to retrieve permissions for custom fields.

This update introduces several enhancements and bug fixes, focusing on workflow improvements, user management, and API refactoring. Key changes include using the service alias `db` for the CASBIN database URI in GitHub Actions, improved admin user management with Flask app context, and enhanced RBAC and SQL initialization with better error handling. The custom fields API has been refactored for better testing and permissions management. Additionally, logging and error handling have been improved, and integration tests have been updated for better security and validation.

- **Workflow Update**: The CASBIN database URI in GitHub Actions now uses the service alias `db` instead of `host.docker.internal`.

- **Admin User Management Improvements**: The admin user management script now explicitly uses the Flask app context (`with app.app_context()`) for proper database and application resource access. User upsertion logic based on authentication configuration has been clarified.

- **RBAC and SQL Initialization Enhancements**: RBAC utilities now use context managers (`with open(...)`) for better resource safety and error handling. The initialization function checks for required SQL files, logs processes, and handles exceptions by rolling back on errors.

- **Custom Fields API Refactoring**: Old custom fields endpoints have been replaced by a new namespace in `ui_custom_fields.py`, consolidating testing and permissions retrieval. A new method, `get_roles_for_custom_field`, retrieves roles with read/write permissions for a given custom field key, excluding admin roles.

- **Additional Logging and Error Handling**: Enhanced logging across modules, such as in RBAC initialization and schema update functions, aids troubleshooting and monitoring.

- **Test Improvements**: Integration tests for text editor file uploads and custom field endpoints have been updated to ensure XSS sanitization, file size validations, and proper serialization of role data, covering unauthorized access and non-existent custom fields.