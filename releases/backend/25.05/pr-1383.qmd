---
title: "Improve template swap and merge experience in `inventory models` (#1383)"
categories: [backend, 25.05, release]
sidebar: release-notes
toc-expand: true
date: "April 28, 2025"
# Content edited by AI - 2025-06-09 16:27
# Content overwritten from an earlier version - 2025-06-09 16:27
# PR URL: https://github.com/validmind/backend/pull/1383
---

This update enhances the creation and swapping of documentation templates in inventory models. Key changes include:

- The `create_template_version_from_json` method now updates the current template version using document type and sections data, then saves a new version.

- Three new HTTP POST endpoints for `model_documentation`, `validation_report`, and `monitoring` use a common helper function, `_create_and_swap_template`, which:
  - Validates the document type.
  - Verifies the inventory model based on the user's organization and membership, with an authorization override for model admins.
  - Checks for required fields (`to_template_cuid`, `to_template_version`, and `new_template_json`) in the JSON payload.
  - Retrieves the target template and version, performs the swap using `swap_template`, and updates the template with `create_template_version_from_json`.
  - Logs and raises a `BadRequestError` for errors with relevant messages.

These changes improve template management by ensuring validation and error handling when swapping templates based on a JSON structure.

<!--- VALIDATION SUMMARY
Content Type: title
Validation Status: CHECK
Attempts: 7
Last Validation: 2025-06-09 16:17:28
Result: The edited content provides a clearer and more specific description of the improvement. By specifying "in `inventory models`," it gives a better context for where the changes are applied. However, it removes the "feat(templates):" prefix, which might be important if this is part of a commit message ...
Reedit Available: Yes
Reedit Message: The edited content provides a clearer and more specific description of the improvement. By specifying "in `inventory models`," it gives a better context for where the changes are applied. However, it ...
--->
