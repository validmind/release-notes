---
title: "Run schema migrations in separate container (#1433)"
categories: [backend, 25.05.04, hotfix, enhancement, do not merge, breaking-change]
sidebar: release-notes
toc-expand: true
date: "May 16, 2025"
# Content edited by AI - 2025-06-04 12:29
# Content validated by AI - 2025-06-04 12:29
# Content overwritten from an earlier version - 2025-06-04 12:29
# PR URL: https://github.com/validmind/backend/pull/1433
---

This update modifies the `docker-entrypoint` script and `docker-compose` configuration to ensure schema migrations, along with scripts for creating analytics views and managing RBAC, are executed first in a separate container. Other containers related to the ValidMind backend will wait for this container to complete before starting.

Schema migrations are now expected to run once per deployment using a Kubernetes `job` resource. Not implementing this `job` resource, either by not updating to the latest version of the helm chart or failing to incorporate it in a custom deployment method, will lead to system degradation. This is because the database schema will not match what the ValidMind backend requires. An associated change to our helm chart will need to merge with this update.

This PR introduces improvements to deployment pipelines, documentation, Docker configurations, and startup scripts:

- The GitHub Actions workflow (`deploy.yaml`) now uses the `aws-actions/amazon-ecr-login@v2` action for ECR login, simplifying the process and reducing failure points. Docker build tags and cache parameters utilize output variables from this action.

- `README.md` updates enhance local development instructions with `make` targets for database migrations, RBAC installation, and analytics views creation. ValidMind schema recreation instructions now recommend using the migrations task.

- `docker-compose.yaml` includes a new service for migrations, building from the backend Dockerfile to run schema migrations in a controlled environment. Dependencies ensure migrations complete before other services proceed.

- `docker-entrypoint.sh` updates include using `KEYCLOAK_SERVICE_PORT` for Keycloak port references and modifying the Redis startup check to skip waiting in migration mode, streamlining startup flows for different modes.

- In `src/backend/api.py`, redundant Flask-Migrate initialization has been removed, as migrations are now handled through a dedicated service or task.

These changes simplify deployment, enhance developer guidance, and improve startup and migration management across environments.