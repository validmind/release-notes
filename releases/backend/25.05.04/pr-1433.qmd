---
title: "Run schema migrations in separate container (#1433)"
categories: [backend, 25.05.04, hotfix, enhancement, breaking-change]
sidebar: release-notes
toc-expand: true
date: "May 23, 2025"
# Content edited by AI - 2025-06-05 09:34
# Content validated by AI - 2025-06-05 09:34
# Content overwritten from an earlier version - 2025-06-05 09:34
# PR URL: https://github.com/validmind/backend/pull/1433
---

This update modifies the `docker-entrypoint` script and `docker-compose` configuration to enhance the deployment process. Schema migrations, along with scripts for creating analytics views and managing RBAC, will now execute first in a separate container. Other ValidMind backend containers will wait for this process to complete before starting. Schema migrations should run once per deployment using a Kubernetes `job` resource. Failing to implement this `job` resource may cause system degradation due to schema mismatches with the ValidMind backend. An associated Helm chart update is required to support this change.

This update enhances deployment pipelines, documentation, Docker configurations, and startup scripts. Key improvements include using the `aws-actions/amazon-ecr-login@v2` for ECR login in GitHub Actions, refining Docker build processes, and enhancing local development instructions in `README.md`. Docker Compose now includes a dedicated migrations service, and startup scripts are optimized for different modes. Redundant code in `api.py` has been removed to streamline processes.

- GitHub Actions workflow (`deploy.yaml`):
  - Simplified ECR login using `aws-actions/amazon-ecr-login@v2`.
  - Updated Docker build tags and cache parameters with new login action outputs.

- Documentation Updates (`README.md`):
  - Added `make` targets for database migrations, RBAC installation, and analytics views.
  - Suggested using migrations task for ValidMind schema recreation.

- Docker Compose Enhancements (`docker-compose.yaml`):
  - Added a service for schema migrations.
  - Set dependency conditions for service completion before proceeding.

- Startup Script Adjustments (`docker-entrypoint.sh`):
  - Aligned Keycloak port with `KEYCLOAK_SERVICE_PORT`.
  - Adjusted Redis startup check for migration mode.
  - Differentiated startup flows for migration, worker, and API modes.

- Code Cleanup (`src/backend/api.py`):
  - Removed redundant Flask-Migrate initialization.