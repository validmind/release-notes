---
title: "Add ability to export comments in validation reports (#1429)"
categories: [backend, 25.05.04, hotfix, enhancement]
sidebar: release-notes
toc-expand: true
date: "May 23, 2025"
# Content edited by AI - 2025-06-05 09:34
# Content validated by AI - 2025-06-05 09:34
# Content overwritten from an earlier version - 2025-06-05 09:34
# PR URL: https://github.com/validmind/backend/pull/1429
---

You can now export comments from validation reports. Previously, only flags could be exported. With the latest frontend update, an "Include comments left on document" checkbox is available when exporting validation reports. This enhancement addresses customer requests to save contributor comments.

This update enhances reporting by integrating user comments into generated reports. Key changes include adding a method in `annotation.py` to query comments, updating report serialization to support an `include_comments` flag, and modifying UI routes to handle this flag. A new function processes comments for document fragments, and a dataclass facilitates comment export. Unit tests ensure comments are correctly serialized and formatted.

- A static method, `get_user_comments_by_model_id`, is added to the `Annotation` model to query and join annotation data with related comments and their creators.

- Report serialization in `model_inventory.py` and `reports.py` now supports an `include_comments` flag for embedding user comments, affecting document generation and content structure.

- UI reporting routes in `ui_reporting.py` parse an additional parameter for comments inclusion. The helper method `parse_generate_report_params` consolidates all report parameters, including the `include_comments` flag.

- A new function, `get_comment_text_for_doc`, processes comments by stripping HTML and organizing them into styled text blocks for document fragments.

- The `ExportAnnotation` dataclass in `util_models.py` facilitates clean export of comment details, including user name, text content, creation date, and context.

- Unit tests in `test_reports.py` verify serialization with comments, ensure comments appear correctly in document fragments, and validate HTML cleaning before embedding in the final report.

These changes ensure user comments are properly queried, formatted, and integrated within generated reports for a comprehensive output.