---
title: "25.05 Release notes"
date: "April 28, 2025"
categories: [cmvm, 25.05, release]
sidebar: release-notes
toc-expand: true
# Content edited by AI - 2025-06-09 16:27
# Content overwritten from an earlier version - 2025-06-09 16:27
---

This release includes sorting options for 'Updated Date' and 'Documentation Updated Date' in the model inventory, as well as date localization using the `FormattedDate` component and the `useFormattedDateAndTime` hook.

<!-- WARNING: Summary may not mention an enhancement PR -->

# Backend
<!--- Tag: [cmvm/25.05](https://github.com/validmind/backend/releases/tag/cmvm/25.05) --->
<!--- Compare API call: gh api repos/validmind/backend/compare/485d53cbc0d5613d59a083eb196875aa1f31b235...485d53cbc0d5613d59a083eb196875aa1f31b235 --->

<!-- ### Changes with no label -->


<!--- PR #1409: https://github.com/validmind/backend/pull/1409 --->
<!--- Labels: none --->
<!--- ### Merge `main` into `staging` for version `1.30.7` (#1409) --->
<!-- Merge PR - not included in release notes. -->


<!--- PR #1374: https://github.com/validmind/backend/pull/1374 --->
<!--- Labels: none --->
<!--- ### Merge production hotfixes into `staging` branch (#1374) --->
<!-- Merge PR - not included in release notes. -->


<!--- PR #1393: https://github.com/validmind/backend/pull/1393 --->
<!--- Labels: none --->
### Enhance metadata filtering in `Figure` model to support timestamp values (#1393)

This update improves metadata filtering in the `get_latest_figures` function by handling timestamp values. It checks if the metadata value is a `datetime` or `date` object. If it is, the JSON string value is cast to a datetime type using SQLAlchemy's `func.cast` for comparison. Otherwise, it is converted to a string. This ensures accurate filtering of records based on timestamp metadata, allowing date and time values to be correctly interpreted within the query.


<!--- PR #1370: https://github.com/validmind/backend/pull/1370 --->
<!--- Labels: none --->
### Add file to `docker/build-push-action` in AWS deployment workflow (#1370)

This update enhances the AWS secondary deployment workflow by introducing a dynamic Dockerfile specification. The `file: ${{ matrix.file }}` parameter in the `docker/build-push-action` step enables the workflow to select the appropriate Dockerfile based on the matrix configuration. This change increases build process flexibility by supporting multiple Dockerfiles without needing workflow modifications for each scenario.


<!--- PR #1381: https://github.com/validmind/backend/pull/1381 --->
<!--- Labels: none --->
### Enhance authorization for `report_generation` endpoint in UI reporting route (#1381)

This update enhances authorization for the report generation endpoint in the UI reporting route. Key changes include:

- The authorization decorator on the GET endpoint now uses a generic `read` action instead of `download_report`.
- Permission checks within the method depend on the document type in the request:
  - `download_doc` authorization is needed for `documentation-report` or `monitoring-report`.
  - `download_vr` authorization is needed for `validation-report`.
  - A `BadRequestError` is raised for unsupported document types.


<!--- PR #1398: https://github.com/validmind/backend/pull/1398 --->
<!--- Labels: none --->
<!--- ### Merge `main` into `staging` for version 1.30.7 (#1398) --->
<!-- Merge PR - not included in release notes. -->


<!--- PR #1337: https://github.com/validmind/backend/pull/1337 --->
<!--- Labels: none --->
### Add date localization support in `user` settings (#1337)

This update enhances user settings by adding a locale configuration field. Key changes include:

- A new Alembic migration sets the default value of the `ui_settings` column in the `users` table to `{"locale": "en"}` for future inserts and updates existing records to include the locale setting if missing.
- The `ui_settings` column in the User model now defaults to `{"locale": "en"}`.
- The JSON schema for `ui_settings` is updated to include a `locale` property of type string.


<!--- PR #1399: https://github.com/validmind/backend/pull/1399 --->
<!--- Labels: none --->
<!--- ### Merge `staging` into `prod` for version `1.30.7` (#1399) --->
<!-- Merge PR - not included in release notes. -->


<!--- PR #1410: https://github.com/validmind/backend/pull/1410 --->
<!--- Labels: none --->
<!--- ### Merge `staging` into `prod` for version `1.30.7` (#1410) --->
<!-- Merge PR - not included in release notes. -->


<!--- PR #1391: https://github.com/validmind/backend/pull/1391 --->
<!--- Labels: none --->
### Remove production logging for `/api/v1/health` endpoint (#1391)

This update enhances API initialization and logging configuration for improved maintainability and reduced log noise. In `src/backend/api.py`, imports are refined by removing duplicates and reordering modules. New route registrations are added for various admin and UI endpoints. Error handler registration and context setup are streamlined. A lambda filter on the `werkzeug` logger now filters out health check requests. In `src/backend/utils/logging/structlog.py`, request logging for the `/api/v1/health` endpoint is set to debug level, reducing log clutter. These changes improve code clarity and logging efficiency without affecting API functionality.


<!--- PR #1371: https://github.com/validmind/backend/pull/1371 --->
<!--- Labels: none --->
### Enhance metadata filtering in figure queries by casting JSON timestamps to `DateTime` (#1371)

This update enhances metadata filtering in database queries for figures by accurately comparing timestamp metadata. JSON timestamp values are now cast to `DateTime` using the database's functionality. Additionally, there is a minor version bump in the `pyproject.toml` file.


<!--- PR #1395: https://github.com/validmind/backend/pull/1395 --->
<!--- Labels: none --->
<!--- ### Merge staging hotfixes into `main` for version `1.30.7` (#1395) --->
<!-- Merge PR - not included in release notes. -->


<!--- PR #1392: https://github.com/validmind/backend/pull/1392 --->
<!--- Labels: none --->
<!--- ### Merge production hotfixes into `staging` for version 1.30.7 (#1392) --->
<!-- Merge PR - not included in release notes. -->


<!--- PR #1383: https://github.com/validmind/backend/pull/1383 --->
<!--- Labels: none --->
### Improve template swap and merge experience in `inventory models` (#1383)

This update enhances the creation and swapping of documentation templates in inventory models. Key changes include:

- The `create_template_version_from_json` method now updates the current template version using document type and sections data, then saves a new version.

- Three new HTTP POST endpoints for `model_documentation`, `validation_report`, and `monitoring` use a common helper function, `_create_and_swap_template`, which:
  - Validates the document type.
  - Verifies the inventory model based on the user's organization and membership, with an authorization override for model admins.
  - Checks for required fields (`to_template_cuid`, `to_template_version`, and `new_template_json`) in the JSON payload.
  - Retrieves the target template and version, performs the swap using `swap_template`, and updates the template with `create_template_version_from_json`.
  - Logs and raises a `BadRequestError` for errors with relevant messages.

These changes improve template management by ensuring validation and error handling when swapping templates based on a JSON structure.


<!--- PR #1372: https://github.com/validmind/backend/pull/1372 --->
<!--- Labels: none --->
### Add `is_disabled` column to `users` table for account management (#1372)

An `is_disabled` column has been added to the users table through an Alembic migration, enabling user accounts to be disabled. The migration supports both upgrade and downgrade paths.

The authentication process now verifies the `is_disabled` flag after token validation. If a user is disabled, an authentication error is raised, blocking access. This check also applies to client users at a specific endpoint, ensuring disabled users cannot perform protected actions.


<!--- PR #1378: https://github.com/validmind/backend/pull/1378 --->
<!--- Labels: none --->
### Update `readme` to include Docker swap configuration settings (#1378)

The `README.md` file now includes instructions for configuring Docker Desktop. Users should set the swap memory to `2 GB` in the Docker Desktop settings under the Resources tab. This ensures optimal performance by applying the correct swap settings before starting the project.


<!--- PR #1377: https://github.com/validmind/backend/pull/1377 --->
<!--- Labels: none --->
### Fix typo in `healthcheck` endpoint response key (#1377)

The health check API endpoint response has been corrected to return the key as `status` instead of the misspelled `stauts`, ensuring the expected response format.


<!--- PR #1375: https://github.com/validmind/backend/pull/1375 --->
<!--- Labels: none --->
<!--- ### Merge `staging` hotfixes into `main` for version 1.30.5 (#1375) --->
<!-- Merge PR - not included in release notes. -->


<!--- PR #1406: https://github.com/validmind/backend/pull/1406 --->
<!--- Labels: none --->
### Upgrade `h11` to 0.16.0 to address `CVE-2025-43859` (#1406)

This update enhances dependency management and consistency in container builds. The Dockerfile now uses base image v1.67.4 and upgrades `h11` to version 0.16.0, improving HTTP/1.1 implementation for customer-managed deployments. The `poetry.lock` file reflects the upgrade of `h11` from 0.14.0 to 0.16.0 and `httpcore` from 1.0.7 to 1.0.9. The `pyproject.toml` file now enforces `h11` (>=0.16.0) for consistent builds and dependency resolution.


<!--- PR #1389: https://github.com/validmind/backend/pull/1389 --->
<!--- Labels: none --->
### Increase `db` connections to prevent pool exhaustion (#1389)

The backend API configuration now supports environment-based settings for SQLAlchemy's connection pooling. The Flask app uses environment variables `SQLALCHEMY_POOL_SIZE` and `SQLALCHEMY_MAX_OVERFLOW`, defaulting to 25 and 15 if unspecified. This enables dynamic adjustment of database connection pooling, enhancing performance and resource management across different deployment scenarios.


<!--- PR #1376: https://github.com/validmind/backend/pull/1376 --->
<!--- Labels: none --->
### Add sorting by `documentation_updated_at` to the model inventory API (#1376)

The inventory model API now includes `updated_at` and `documentation_updated_at` fields to track updates. The GET endpoint supports sorting by `documentation_updated_at`, allowing clients to order models by their most recent documentation updates.


<!--- PR #1413: https://github.com/validmind/backend/pull/1413 --->
<!--- Labels: none --->
<!--- ### Merge `main` into `staging` for version `1.30.7` (#1413) --->
<!-- Merge PR - not included in release notes. -->


<!--- PR #1380: https://github.com/validmind/backend/pull/1380 --->
<!--- Labels: none --->
### Refine `authorization` logic to resolve document download issues (#1380)

This update enhances the UI reporting endpoint by refining the authorization logic for report generation.

- Top-level authorization now uses the generic action `read`.
  
- Fine-grained authorization depends on document type. "Documentation-report" and "monitoring-report" require the `download_doc` permission, while "validation-report" needs the `download_vr` permission.

- An invalid document type triggers a `BadRequestError`.

- Exception handling is improved to specifically catch `BadRequestError` and manage other exceptions effectively.


<!--- PR #1401: https://github.com/validmind/backend/pull/1401 --->
<!--- Labels: none --->
### Update dev deployments to use new `values` format (#1401)

The GitHub Actions deployment workflow now uses the `values-new.yaml` template to generate `values.yaml`, integrating updated configuration values and aligning with new deployment parameters. The `sed` substitutions for tokens such as site, environment, vault ID, repository, and API SHA remain unchanged.


<!--- PR #1412: https://github.com/validmind/backend/pull/1412 --->
<!--- Labels: none --->
### Fixed a bug where `document_type` was not set correctly (#1412)

The `_add_library_block` function has been updated to include a `content_type` parameter. This parameter is derived from `document_type` to ensure accurate content type specification for block rendering or processing.


<!--- PR #1414: https://github.com/validmind/backend/pull/1414 --->
<!--- Labels: none --->
<!--- ### Merge `staging` into `prod` for version `1.30.7` (#1414) --->
<!-- Merge PR - not included in release notes. -->


<!--- PR #1388: https://github.com/validmind/backend/pull/1388 --->
<!--- Labels: none --->
### Increase database connections to prevent pool exhaustion (#1388)

The default size and upper limit of the database connection pool have been increased. Two new environment variables for the API server, `SQLALCHEMY_MAX_OVERFLOW` and `SQLALCHEMY_POOL_SIZE`, are introduced with default values of 25 and 15, respectively. These variables are used by Flask-SQLAlchemy through `app.config`.

Configurable settings for the SQLAlchemy connection pool in the Flask backend API are now available. The parameters `SQLALCHEMY_POOL_SIZE` and `SQLALCHEMY_MAX_OVERFLOW` can be set via environment variables, with default values of 25 and 15. This allows operators to adjust connection pool settings dynamically based on deployment needs without modifying the source code. Using environment variables enhances flexibility in managing database connections under varied load conditions. If not set, the system defaults to the provided values, ensuring continuity in functionality.


# Frontend
<!--- Tag: [cmvm/25.05](https://github.com/validmind/frontend/releases/tag/cmvm/25.05) --->
<!--- Compare API call: gh api repos/validmind/frontend/compare/7bed9da81a872e6bad88f293e90e38329310a12c...7bed9da81a872e6bad88f293e90e38329310a12c --->

## Enhancements


<!--- PR #1326: https://github.com/validmind/frontend/pull/1326 --->
<!--- Labels: enhancement --->
### Add sorting by `Updated Date` and `Documentation Updated Date` to model inventory (#1326)

The Inventory Model List now features new sort columns: `Updated Date` and `Documentation Updated Date`.

New sorting options, `Updated Date` and `Documentation Updated Date`, are now available on the Model Inventory page. Users can sort these in descending (latest first) or ascending (oldest first) order. These enhancements are integrated into the existing sorting mechanism for consistency with other options. The changes are implemented in the UI component at `src/pages/ModelInventory/index.tsx`, offering users greater flexibility in managing model-related data.


<!--- PR #1312: https://github.com/validmind/frontend/pull/1312 --->
<!--- Labels: enhancement --->
### Add date localization using `FormattedDate` component and `useFormattedDateAndTime` hook (#1312)

Enhanced date formatting by adding `locale` support. Date display functions now accept `locale` as a parameter, ensuring consistent formatting across components. The user interface reflects user-specific `locale` settings in date displays throughout the application.

This update enhances date formatting and display by introducing the `FormattedDate` component and `useFormattedDateAndTime` hook, replacing older utilities. UI localization settings are now stored in `localStorage` when changed. New admin components (`OrganizationRow`, `RoleRow`, `UserRow`) simplify table row implementations. `FormattedDate` is used for date localization across admin pages, user views, activity feeds, and modals. The custom date picker dynamically loads locales and uses `FormattedDate` for display. Template, workflow execution, and profile pages now support localized date displays and user-selected locale options. These changes enhance code modularity and ensure date and time values reflect user locale preferences throughout the application.

<!-- ### Changes with no label -->


<!--- PR #1338: https://github.com/validmind/frontend/pull/1338 --->
<!--- Labels: none --->
<!--- ### Merge `main` into `staging-1.33.3` (#1338) --->
<!-- Merge PR - not included in release notes. -->


<!--- PR #1342: https://github.com/validmind/frontend/pull/1342 --->
<!--- Labels: none --->
<!--- ### Merge `main` into `staging` for version `1.33.3` (#1342) --->
<!-- Merge PR - not included in release notes. -->


<!--- PR #1343: https://github.com/validmind/frontend/pull/1343 --->
<!--- Labels: none --->
<!--- ### Merge `staging` into `prod` for version 1.33.3 (#1343) --->
<!-- Merge PR - not included in release notes. -->


<!--- PR #1333: https://github.com/validmind/frontend/pull/1333 --->
<!--- Labels: none --->
<!--- ### Enhance `risk_area` functionality for improved performance (#1333) --->
<!-- Merge PR - not included in release notes. -->


<!--- PR #1340: https://github.com/validmind/frontend/pull/1340 --->
<!--- Labels: none --->
<!--- ### Merge `staging` into `prod` version 1.33.3 (#1340) --->
<!-- Merge PR - not included in release notes. -->


# Agents
<!--- Tag: [cmvm/25.05](https://github.com/validmind/agents/releases/tag/cmvm/25.05) --->
<!--- Compare API call: gh api repos/validmind/agents/compare/d9c9fe5f27cfcfe8c87003d3cbb4d5ec083122eb...d9c9fe5f27cfcfe8c87003d3cbb4d5ec083122eb --->

<!-- ### Changes with no label -->


<!--- PR #15: https://github.com/validmind/agents/pull/15 --->
<!--- Labels: none --->
<!--- ### Merge `main` into `prod` (#15) --->
<!-- Merge PR - not included in release notes. -->


<!--- PR #5: https://github.com/validmind/agents/pull/5 --->
<!--- Labels: none --->
<!--- ### "" (#5) --->
<!-- No release notes or summary provided. -->


<!--- PR #11: https://github.com/validmind/agents/pull/11 --->
<!--- Labels: none --->
<!--- ### Add `prod-release` button (#11) --->
<!-- No release notes or summary provided. -->


<!--- PR #9: https://github.com/validmind/agents/pull/9 --->
<!--- Labels: none --->
<!--- ### Use `litellm` when available (#9) --->
<!-- No release notes or summary provided. -->


<!--- PR #10: https://github.com/validmind/agents/pull/10 --->
<!--- Labels: none --->
### Local dev displays test message in `UI` (#10)

![image](https://github.com/user-attachments/assets/433e6e73-dd0e-4714-a514-e226375669ad)

When running locally, we have logic that checks if litellm is running by sending a single "hello" to the llm. This is a great way to be able to fall back to the bare openai api if the developer doesn't want to run litellm locally. However the problem is that this invoke to the langchain llm client happens within the task node of the langgraph workflow. Meaning that the "Hello" back from the LLM is streamed to the UI. The solution is simply to remove the callbacks array when running `client.invoke()`.


<!--- PR #13: https://github.com/validmind/agents/pull/13 --->
<!--- Labels: none --->
<!--- ### Avoid using version numbers in `release` branch names (#13) --->
<!-- No release notes or summary provided. -->


<!--- PR #14: https://github.com/validmind/agents/pull/14 --->
<!--- Labels: none --->
<!--- ### Use `main` instead of `staging` as agents have no `staging` branch (#14) --->
<!-- No release notes or summary provided. -->


<!--- PR #8: https://github.com/validmind/agents/pull/8 --->
<!--- Labels: none --->
<!--- ### Release `0.1.2` (#8) --->
<!-- No release notes or summary provided. -->


<!--- PR #7: https://github.com/validmind/agents/pull/7 --->
<!--- Labels: none --->
### Fix `risk_assessment` function (#7)

Example problematic object:

```
{
    "cuid": "cly3m8o8c000sae78zeppz73f",
    "ref_id": "47b0bdaa-1b75-4c13-9f14-8d7adc239e92",
    "test_name": "my_custom_tests.ConfusionMatrix",
    "title": None,
    "passed": None,
    "params": None,
    "summary": [],
    "metadata": None,
    "content_type": "validation_report",
    "updated_at": None,
    "user": {
        "cuid": "cln9z5yws00003q8h9x11uv27",
        "email": "andres+local+jane@validmind.ai",
        "name": "Jane Validator",
        "first_name": "Jane Validator",
        "last_name": None,
        "job_title": None,
        "picture": "https://vmai.s3.us-west-1.amazonaws.com/test-avatar.png",
        "inputs": [],
    },
}
```

---

```
  File "/Users/andres/code/backend/src/backend/events/handlers.py", line 130, in generate_risk_assessment_handler
    raise e
  File "/Users/andres/code/backend/src/backend/events/handlers.py", line 115, in generate_risk_assessment_handler
    for message, _ in risk_assessment_generation.stream(
  File "/Users/andres/code/backend/.venv/lib/python3.11/site-packages/langgraph/pregel/__init__.py", line 2324, in stream
    for _ in runner.tick(
  File "/Users/andres/code/agents/agents/task.py", line 318, in __call__
    rendered = message.render(state["inputs"])
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/andres/code/agents/agents/task.py", line 229, in render
    output += component.render(inputs)
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/andres/code/agents/agents/task.py", line 190, in render
    return str(module.render(**args))
               ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/andres/code/agents/agents/prompt_components/risk_assessment/user/__init__.py", line 29, in render
    evidence_object["figures"] = __context__.get_figures(model_cuid, evidence["test_result"])  # noqa: F821
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/andres/code/agents/agents/context.py", line 134, in get_figures
    metadata_key = frozenset(metadata_query.items()) if metadata_query else None
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: unhashable type: 'list'
```


<!--- PR #12: https://github.com/validmind/agents/pull/12 --->
<!--- Labels: none --->
<!--- ### Use `.yaml` suffix (#12) --->
<!-- No release notes or summary provided. -->


# Installation
<!--- Tag: [cmvm/25.05](https://github.com/validmind/installation/releases/tag/cmvm/25.05) --->
<!--- Compare API call: gh api repos/validmind/installation/compare/6945d71776f36a803bfae06f3e96966a6317f388...6945d71776f36a803bfae06f3e96966a6317f388 --->

## Documentation


<!--- PR #24: https://github.com/validmind/installation/pull/24 --->
<!--- Labels: documentation --->
### Release notes for version `25.05` (#24)

This PR cherry picks 93be9adfee9122135d699e6fcf6448e5b3966d00 from my release notes script branch to unblock the release today. 

Edits:

- Rename `25.05-rc1.qmd` > `25.05.qmd` 
- Comment out changes that are clearly for internal use
- Consistency text tweaks (examples: use sentence-style headings, omit Shortcut story prefixes) 

<!-- ### Changes with no label -->


<!--- PR #23: https://github.com/validmind/installation/pull/23 --->
<!--- Labels: none --->
### Fix `helm` workflows (#23)

* Helm chart testing will now run on pushes to main
* Fix helm release workflow


<!--- PR #26: https://github.com/validmind/installation/pull/26 --->
<!--- Labels: none --->
<!--- ### Add version 25.05 to `cmvm` releases (#26) --->
<!-- No release notes or summary provided. -->


<!--- PR #21: https://github.com/validmind/installation/pull/21 --->
<!--- Labels: none --->
### Fix `onePasswordItem` template (#21)

This is only used in SaaS environments.


<!--- PR #22: https://github.com/validmind/installation/pull/22 --->
<!--- Labels: none --->
<!--- ### Clean up `README` file (#22) --->
<!-- No release notes or summary provided. -->


<!--- PR #16: https://github.com/validmind/installation/pull/16 --->
<!--- Labels: none --->
<!--- ### Update `Customer-managed-releases.qmd` file (#16) --->
<!-- No release notes or summary provided. -->


<!--- PR #17: https://github.com/validmind/installation/pull/17 --->
<!--- Labels: none --->
<!--- ### Remove unneeded `docs` workflows and `Makefile` (#17) --->
<!-- No release notes or summary provided. -->


<!--- PR #20: https://github.com/validmind/installation/pull/20 --->
<!--- Labels: none --->
### Fix various `port` issues (#20)

This will fix some erroneous copy pasting.


<!--- PR #19: https://github.com/validmind/installation/pull/19 --->
<!--- Labels: none --->
### Toggle `keycloak` variables (#19)

This will fix some CreateContainerConfigErrors when using the merged helm chart when keycloak is disabled.


<!--- PR #18: https://github.com/validmind/installation/pull/18 --->
<!--- Labels: none --->
<!--- ### Update `Customer-managed-releases.qmd` file (#18) --->
<!-- No release notes or summary provided. -->


<!--- PR #12: https://github.com/validmind/installation/pull/12 --->
<!--- Labels: none --->
### Update `helm` chart and add testing actions (#12)

* Update helm chart to be in line with infra repo so that can be retired.

* Add keycloak to helm chart and example values.

* Add keycloak documentation

* Add github actions to do helm linting and chart render as PR tests.

* ADd github actions to tar up the helm chart to secure section of s3 bucket and ecr

TODO (move above this as they are done):

* Fix symlink issues with quarto
* Test on dev cluster


<!--- PR #15: https://github.com/validmind/installation/pull/15 --->
<!--- Labels: none --->
### Add `25.04` and `25.04.01` releases (#15)

Also fix support windows to be 6 months


# Documentation
<!--- Tag: [cmvm/25.05](https://github.com/validmind/documentation/releases/tag/cmvm/25.05) --->
<!--- Compare API call: gh api repos/validmind/documentation/compare/a43dbe7f31d943df0b8d187060983bbdc89c8ac9...a43dbe7f31d943df0b8d187060983bbdc89c8ac9 --->



<!--- PR #687: https://github.com/validmind/documentation/pull/687 --->
<!--- Labels: documentation, highlight --->
### Update user guide for `attestation` process management (#687)

Model attestation is now available, enabling model owners and validators to formally review and certify key details about a model at a specific point in time. This feature supports internal governance and compliance with external requirements. The attestation process includes status updates and role-specific tasks to track progress.

[Working with attestations](/guide/attestation/working-with-attestations.qmd)

This update introduces a feature for managing attestations, enhancing compliance and governance capabilities with new documentation and updates.

- **Attestation Documentation**: New guides and glossary entries explain the attestation process, including setup, completion, and review instructions. Detailed steps are provided for model owners and validators.

- **Mermaid Diagram Styling**: Updates include changes to node and edge colors and the addition of rounded corners for nodes.

- **Guide Organization**: Guides now have a dedicated section for attestation, making it easier to find relevant information.


<!--- PR #686: https://github.com/validmind/documentation/pull/686 --->
<!--- Labels: documentation --->
### Update documentation for managing `model` stakeholder types (#686)

New content has been added to the "Managing users" section, explaining how to manage model stakeholder types. This page is now included in the "Managing users" landing page tiles.

The model inventory fields documentation now includes a section on editing model stakeholders, focusing on model stakeholder types instead of outdated role permissions.

This update enhances documentation for managing roles and stakeholder types on the platform. A new guide, `manage-model-stakeholder-types.qmd`, explains how to add, edit, manage permissions, and apply stakeholder types to models. Updates to `manage-roles.qmd` clarify role management, including adding roles, managing permissions, associating users with roles, and ensuring unique names for roles and stakeholder types. Model stakeholder types are now included in `edit-model-inventory-fields.qmd` and `manage-model-inventory-fields.qmd` to ensure they are considered in managing model inventory fields and permissions. Minor structural changes, such as adjusting grid columns in `managing-users.qmd`, enhance clarity and consistency across the documentation.


<!--- PR #689: https://github.com/validmind/documentation/pull/689 --->
<!--- Labels: documentation --->
### Added new introductory `validation` notebooks for `ValidMind` (#689)

ValidMind for model validation and development notebooks are now available in the library portal. The updated numbering structure is reflected in the side navigation and listing tiles.

The Developers > ValidMind Library portal now uses universal language and links, broadening its purpose beyond a developer portal. Consistent styling from the API documentation has been applied, resolving issues with side navigation and long notebook titles. The sidebar for this section is now in its own `_sidebar.yaml` file.

The link to validmind.com has been removed from the main top navigation, as it is already in the footer.

This update enhances the ValidMind documentation and testing framework. Documentation now includes clearer instructions, new sections, and examples for setting up and using the library for model validation and development, including custom tests and external test providers. New tests have been added, and existing ones updated to cover more scenarios in model validation and data quality. Test descriptions now detail parameters and expected outcomes. Code refactoring improves readability and maintainability, and minor bugs in test execution and logging have been fixed. Security documentation has been updated to align with best practices for handling sensitive data.

<!-- ### Changes with no label -->


<!--- PR #691: https://github.com/validmind/documentation/pull/691 --->
<!--- Labels: none --->
<!--- ### Merge `main` branch into `staging` branch (#691) --->
<!-- Merge PR - not included in release notes. -->


<!--- PR #697: https://github.com/validmind/documentation/pull/697 --->
<!--- Labels: none --->
<!--- ### Merge `main` branch into `staging` branch (#697) --->
<!-- Merge PR - not included in release notes. -->


<!--- PR #690: https://github.com/validmind/documentation/pull/690 --->
<!--- Labels: none --->
<!--- ### Merge `main` into `staging` (#690) --->
<!-- Merge PR - not included in release notes. -->


<!--- PR #688: https://github.com/validmind/documentation/pull/688 --->
<!--- Labels: none --->
<!--- ### Merge `main` into `staging` (#688) --->
<!-- Merge PR - not included in release notes. -->


<!--- PR #702: https://github.com/validmind/documentation/pull/702 --->
<!--- Labels: none --->
<!--- ### Merge `staging` into `prod` environment (#702) --->
<!-- Merge PR - not included in release notes. -->


<!--- # Validmind-library --->
<!--- Tag cmvm/25.05 not found in validmind-library repository --->
<!-- No tag found in this repository -->
