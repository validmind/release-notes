---
title: "25.06.01 Hotfix release notes"
date: "June 05, 2025"
categories: [cmvm, 25.06.01, hotfix]
sidebar: release-notes
toc-expand: true
---

This release includes the ability to configure finding statuses via the API, add custom fields to exported organization templates, upload sourcemaps to Datadog and Sentry without deployment, and customize finding statuses in the UI.

<!-- WARNING: Summary may not mention an enhancement PR -->

# Backend
<!--- Tag: [cmvm/25.06.01](https://github.com/validmind/backend/releases/tag/cmvm/25.06.01) --->
<!--- Compare API call: gh api repos/validmind/backend/compare/dff41c635ccf1fc06e135076d086978769c8ce33...dff41c635ccf1fc06e135076d086978769c8ce33 --->

## Enhancements


<!--- PR #1499: https://github.com/validmind/backend/pull/1499 --->
<!--- Labels: enhancement --->
### Configure finding statuses via the `API` (#1499)

#### What
<!-- Describe what the change is doing, including behavior before and after the change -->
Enables user to customize finding statuses in Settings page

#### Why
<!-- Explain why the change is being made and needed -->
Users may want custom finding status values when interacting with the platform

# PR Summary

This pull request adds a new feature to manage the status of findings. It introduces a new database table and model for finding statuses that allow organizations to define custom statuses (e.g. open, closed, deleted) for findings. The changes include:

- A migration script that creates a new table (finding_statuses) and a new column (status_id) in the findings table. The script also backfills existing findings using the old status values and then drops the deprecated column.
- Updates to the Finding model to replace the string-based status field with a foreign key relationship to the FindingStatus model. This includes changes to the serialization, creation, updating, and deletion of findings to ensure the new status is properly managed.
- Addition of a new FindingStatus model with methods to create, update, delete, and load default statuses for an organization. The model includes helper methods (such as serialization and mark_as_deleted) to support these operations.
- API changes including new endpoints (via a dedicated namespace) for retrieving, creating, updating, and deleting finding statuses. The endpoints enforce validations (e.g. duplicate status names) as well as permissions using the requires_auth decorator.
- Updates to related routes (such as ui, reporting, and SQL views) to join and filter against the new FindingStatus table rather than using the old status string.
- Update to organization templates and platform configurations to include finding statuses.
- Unit tests modifications to exercise the new functionality for creating, updating, and deleting finding statuses as part of finding CRUD operations.

Overall, this PR integrates finding status management into the application, improves data integrity by using a relational approach, and extends the API interfaces for enhanced UI interaction.


<!--- PR #1448: https://github.com/validmind/backend/pull/1448 --->
<!--- Labels: enhancement, python --->
### Include custom fields in exported organization templates (#1448)

#### What
<!-- Describe what the change is doing, including behavior before and after the change -->
This adds custom fields to the exported organization template. When making a new org with this template, the custom fields are included.

#### Why
<!-- Explain why the change is being made and needed -->
This makes it easier for customers to setup new orgs.

#### External Release Notes
<!--- REPLACE THIS COMMENT WITH YOUR DESCRIPTION --->
When exporting an organization template, custom fields are now included. When making a new organization with this template, the custom fields will be present.

#### Breaking Changes
<!-- List any breaking changes -->

#### Screenshots/Videos (Frontend Only)
<!-- Add screenshots or videos showing before/after -->

# PR Summary

This PR introduces several functional enhancements related to custom fields and template processing in organization and inventory model management. The main changes include:

1. In the inventory model serialization, a new static method, sanitize_custom_fields, is added to process custom fields. It filters out empty fields, values that are explicitly 'null' or 'n/a' (case insensitive), and values starting with 'err:'. The method ensures that only valid custom field values are included in the serialized output of organization templates.

2. The serialization method for organization templates now includes these sanitized custom fields, providing more consistent and clean data.

3. In the organization creation workflow, after setting up a new organization, the code now retrieves a user from the new organization and triggers field update events for custom fields. This ensures that any default or template-specified custom fields are properly propagated to related inventory models.

4. An improvement in the retrieval of inventory models, replacing a list comprehension with a database filter to retrieve models by their cuid, thereby streamlining the query and error handling.

5. The template serialization in the template model has been updated to use the latest version data rather than relying on the static data structure. This allows for better handling of versioned template data.

6. Minor formatting adjustments and improvements in logging and error message consistency have been made.

Overall, these enhancements streamline the process of handling custom fields and improve the robustness of organization and template management workflows.

<!-- ### Changes with no label -->


<!--- PR #1564: https://github.com/validmind/backend/pull/1564 --->
<!--- Labels: none --->
<!--- ### Merge Staging into Prod (prod-1.30.16) (#1564) --->
<!-- No release notes or summary provided. -->


<!--- PR #1534: https://github.com/validmind/backend/pull/1534 --->
<!--- Labels: none --->
<!--- ### feat: merge prod deploy workflows, port elsewhere (#1534) --->
<!-- No release notes or summary provided. -->


<!--- PR #1560: https://github.com/validmind/backend/pull/1560 --->
<!--- Labels: none --->
<!--- ### Merge Main into Staging (staging-1.30.16) (#1560) --->
<!-- No release notes or summary provided. -->


<!--- PR #1407: https://github.com/validmind/backend/pull/1407 --->
<!--- Labels: none --->
<!--- ### chore: Merge litellm dockerfiles (#1407) --->
<!-- No release notes or summary provided. -->


<!--- PR #1555: https://github.com/validmind/backend/pull/1555 --->
<!--- Labels: none --->
<!--- ### Cullen/merge main into staging (#1555) --->
<!-- No release notes or summary provided. -->


<!--- PR #1561: https://github.com/validmind/backend/pull/1561 --->
<!--- Labels: none --->
<!--- ### Merge Staging into Prod (prod-1.30.16) (#1561) --->
<!-- No release notes or summary provided. -->


<!--- PR #1558: https://github.com/validmind/backend/pull/1558 --->
<!--- Labels: none --->
<!--- ### Merge Staging into Prod (prod-1.30.16) (#1558) --->
<!-- No release notes or summary provided. -->


<!--- PR #1563: https://github.com/validmind/backend/pull/1563 --->
<!--- Labels: none --->
<!--- ### Merge Main into Staging (staging-1.30.16) (#1563) --->
<!-- No release notes or summary provided. -->


<!--- PR #1557: https://github.com/validmind/backend/pull/1557 --->
<!--- Labels: none --->
<!--- ### Merge Main into Staging (staging-1.30.16) (#1557) --->
<!-- No release notes or summary provided. -->


<!--- PR #1546: https://github.com/validmind/backend/pull/1546 --->
<!--- Labels: none --->
### Update `PYTHONPATH` for improved module resolution and error handling (#1546)

#### Changes
- `PYTHONPATH` ensures that we can spawn scripts and have the scripts assume the original base path of the application
- Use module calling syntax so we the rest of the code dependencies can be loaded properly since they are using relative imports
- Fixed how error messages are passed around and printed, I wasn't seeing anything on the console or the HTTP response. Now it works:

```
{
    "error": {
        "code": "INTERNAL_ERROR",
        "message": "Failed to generate monitoring report",
        "details": {
            "error": "/Users/andres/code/backend/.venv/bin/python3: Error while finding module specification for 'workers.report_worker' (ModuleNotFoundError: No module named 'workers')\n"
        },
        "user_response": "Please search for INTERNAL_ERROR in the documentation for troubleshooting information.",
        "status": 500
    },
    "message": "Failed to generate monitoring report"
}
```

and on the logs:

```
2025-06-04T10:20:40.062556 [error] Error generating monitoring report: /Users/andres/code/backend/.venv/bin/python3: Error while finding module specification for 'workers.report_worker' (ModuleNotFoundError: No module named 'workers')
```

---

About `PYTHONPATH`:

#### Alternative Import Strategies
Without PYTHONPATH, you could also use:

# PR Summary

This PR introduces a few functional changes to improve the robustness and maintainability of the API and worker processes:

1. In the Makefile, the command for running the API has been updated to include the current backend source directory in the PYTHONPATH. This makes module resolution more explicit and can help avoid path issues.

2. In the UI reporting route, the report worker is now invoked using module syntax (i.e. using the "-m" flag) rather than constructing a file path manually. This change avoids potential issues with path resolution and simplifies the command line invocation. In addition, the error handling has been enhanced by checking for detailed error information before logging and propagating errors.

3. In the report worker file, the import statements have been refactored. The previous reliance on deeply nested module paths (e.g. from src/backend/...) has been replaced with imports directly from the db package, which should streamline module dependencies and improve maintainability.


# Frontend
<!--- Tag: [cmvm/25.06.01](https://github.com/validmind/frontend/releases/tag/cmvm/25.06.01) --->
<!--- Compare API call: gh api repos/validmind/frontend/compare/b8bf52856a0baecb990b075bd2eeeadc89dcc0dc...b8bf52856a0baecb990b075bd2eeeadc89dcc0dc --->

## Enhancements


<!--- PR #1434: https://github.com/validmind/frontend/pull/1434 --->
<!--- Labels: enhancement --->
### Upload `sourcemaps` to Datadog and Sentry without deployment (#1434)

#### What and why?
This PR does a few things:
- Add npm command to upload the sourcemaps to Datadog & Sentry for debugging help
- Run the sourcemaps upload command during `prod` docker image build
- `rm` the sourcemaps from the final build target to avoid exposing proprietary information

See the docs for [Datadog sourcemap](https://docs.datadoghq.com/real_user_monitoring/guide/upload-javascript-source-maps/), [Sentry sourcemap](https://docs.sentry.io/platforms/javascript/sourcemaps/uploading/cli/), and [Sentry release](https://docs.sentry.io/cli/releases/) for details.

#### Dependencies, breaking changes, and deployment notes
https://github.com/validmind/backend/pull/1539 updates the github actions for the new variables needed during build.

#### External Release Notes
- Adds the ability to upload sourcemaps to datadog and/or sentry

# PR Summary
This pull request introduces a new multi-stage Docker build to handle the uploading of sourcemaps for enhanced error tracking and debugging in production. A dedicated build stage named `sourcemaps-upload` is added which leverages build secrets to securely handle API keys for Datadog and Sentry. The new stage uses a custom NPM script (`sourcemaps-upload`) defined in the package configuration and implemented in the `scripts/sourcemaps-upload.sh` file. This script checks for the presence of required environment variables and conditionally uploads the sourcemaps to Datadog and Sentry. Additionally, the production stage now copies the build output from the sourcemaps upload stage and removes sourcemap files from the final container to prevent exposure of source details. Finally, the initialization of Sentry in the frontend application is updated to include the current release version, which should help in correlating sourcemap data with application versions.

Functional changes include:
- Introducing a new Docker build stage for uploading sourcemaps.
- Integrating Datadog and Sentry APIs for automated sourcemap uploads.
- Updating package scripts and adding necessary dev dependencies.
- Modifying Sentry initialization in the application to include the release version.


<!--- PR #1407: https://github.com/validmind/frontend/pull/1407 --->
<!--- Labels: enhancement --->
### Allow users to customize `finding` statuses in the UI (#1407)

#### What
<!-- Describe what the change is doing, including behavior before and after the change -->
Enables users to customize finding statuses

- Supports creating new finding statuses
- Support 'soft-deleting' finding statuses
- If a finding status is deleted, all findings currently using that status default to `Open`

#### Breaking Changes
<!-- List any breaking changes -->

#### Screenshots/Videos (Frontend Only)
<!-- Add screenshots or videos showing before/after -->

# PR Summary

This PR introduces a new feature for managing finding statuses within the application. It adds a set of new API endpoints for fetching, creating, updating, and deleting finding statuses. The data model is expanded by introducing a new type for finding status that includes a unique identifier, a color scheme, a name, and a default flag. 

New UI components were implemented to support this functionality. A dedicated modal (AddFindingStatusModal) was built that leverages a shared color grid selector for choosing color schemes. The modal carefully handles default statuses by disabling edits on their names. The main application and various settings pages have been updated to integrate the new finding statuses, including adding a new sidebar link for users with the appropriate permissions. In addition, existing components that display finding statuses (such as in findings lists and detailed views) now use these new statuses and display them using the updated design (e.g., using a VMTag component with colors dynamically derived from the status data).

Furthermore, several settings pages were refactored to consistently use a new SettingsSection layout, ensuring a uniform look and feel across the application. Overall, the PR integrates the new finding statuses feature both on the backend (via API enhancements) and the frontend (via component and layout updates).

<!-- ### Changes with no label -->


<!--- PR #1445: https://github.com/validmind/frontend/pull/1445 --->
<!--- Labels: none --->
<!--- ### Merge Main into Staging (staging-1.36.3) (#1445) --->
<!-- No release notes or summary provided. -->


<!--- PR #1446: https://github.com/validmind/frontend/pull/1446 --->
<!--- Labels: none --->
<!--- ### Merge Staging into Prod (prod-1.36.3) (#1446) --->
<!-- No release notes or summary provided. -->


<!--- # Agents --->
<!--- Tag cmvm/25.06.01 not found in agents repository --->
<!-- No tag found in this repository -->

<!--- # Installation --->
<!--- Tag cmvm/25.06.01 not found in installation repository --->
<!-- No tag found in this repository -->

# Documentation
<!--- Tag: [cmvm/25.06.01](https://github.com/validmind/documentation/releases/tag/cmvm/25.06.01) --->
<!--- Compare API call: gh api repos/validmind/documentation/compare/20af028d3131d40d1a545bcbf0e2eddc31a724f0...20af028d3131d40d1a545bcbf0e2eddc31a724f0 --->

<!-- ### Changes with no label -->


<!--- PR #739: https://github.com/validmind/documentation/pull/739 --->
<!--- Labels: none --->
<!--- ### Merge main into staging (#739) --->
<!-- No release notes or summary provided. -->


<!--- PR #736: https://github.com/validmind/documentation/pull/736 --->
<!--- Labels: none --->
<!--- ### Merge main into staging (#736) --->
<!-- No release notes or summary provided. -->


<!--- PR #738: https://github.com/validmind/documentation/pull/738 --->
<!--- Labels: none --->
<!--- ### Merge main into staging (#738) --->
<!-- No release notes or summary provided. -->


<!--- PR #741: https://github.com/validmind/documentation/pull/741 --->
<!--- Labels: none --->
<!--- ### Merge main into staging (#741) --->
<!-- No release notes or summary provided. -->


<!--- PR #730: https://github.com/validmind/documentation/pull/730 --->
<!--- Labels: none --->
<!--- ### Merge main into staging (#730) --->
<!-- No release notes or summary provided. -->


<!--- PR #733: https://github.com/validmind/documentation/pull/733 --->
<!--- Labels: none --->
<!--- ### Merge main into staging (#733) --->
<!-- No release notes or summary provided. -->


<!--- # Validmind-library --->
<!--- Tag cmvm/25.06.01 not found in validmind-library repository --->
<!-- No tag found in this repository -->
