---
title: "25.06.01 Hotfix release notes"
date: "June 06, 2025"
categories: [cmvm, 25.06.01, hotfix]
sidebar: release-notes
toc-expand: true
# Content edited by AI - 2025-06-12 10:52
# Content validated by AI - 2025-06-12 10:52
# Content overwritten from an earlier version - 2025-06-12 10:52
---

This release includes the ability to configure finding statuses via the API, export organization custom fields, upload sourcemaps to Datadog and Sentry without deploying, and customize finding statuses in the UI, among other enhancements.

<!-- WARNING: Summary may not mention an enhancement PR -->

# Backend
<!--- Tag: [cmvm/25.06.01](https://github.com/validmind/backend/releases/tag/cmvm/25.06.01) --->
<!--- Compare API call: gh api repos/validmind/backend/compare/dff41c635ccf1fc06e135076d086978769c8ce33...dff41c635ccf1fc06e135076d086978769c8ce33 --->

## Enhancements


<!--- PR #1499: https://github.com/validmind/backend/pull/1499 --->
<!--- Labels: enhancement, highlight --->
### Configure finding statuses via the `API` (#1499)

You can now customize finding statuses on the Settings page, moving beyond predefined values.

You can now create, update, delete, and retrieve custom finding statuses such as `open`, `closed`, and `deleted`. A migration introduces a `finding_statuses` table, replacing the previous string field with a `status_id` foreign key on `findings`, and automatically back-fills existing data. The Finding model, along with all related UI, reporting routes, SQL views, organization templates, and platform configurations, now references this table. New authenticated API endpoints manage statuses and prevent duplicate names.


<!--- PR #1448: https://github.com/validmind/backend/pull/1448 --->
<!--- Labels: enhancement, python --->
### Export organization `custom fields` (#1448)

You can now export organization templates that include `custom fields`. When you create a new organization from a template, these fields are automatically added. There are no breaking changes.

Now, a `sanitize_custom_fields` method is included in inventory model serialization. This method removes empty values, strings equal to `null` or `n/a` (case-insensitive), and values starting with `err:`. Organization templates now use this sanitizer to ensure only valid custom fields are stored.

When creating an organization, the system now selects a user from that organization and triggers custom-field update events, allowing default or template-defined fields to immediately propagate to related inventory models.

Inventory models are now retrieved using a direct database filter on `cuid`, reducing query overhead and enhancing error handling.

Template serialization now accesses the latest version data, providing you with accurate, version-aware template content.

Logging, formatting, and error messages have been standardized for consistency.

<!-- ### Changes with no label -->


<!--- PR #1546: https://github.com/validmind/backend/pull/1546 --->
<!--- Labels: none --->
### Automatic `PYTHONPATH` setup for improved module resolution and error handling (#1546)

`PYTHONPATH` is now set automatically, allowing spawned scripts to inherit the application's base path. Using `python -m` invocation now loads all dependencies, including those with relative imports. Internal errors are now displayed in both the console and HTTP responses, with logs providing full stack traces for easier debugging.

You can now rely on more robust API and worker processes. The `Makefile` adds the backend source directory to `PYTHONPATH` for accurate module resolution. The UI reporting route uses `python -m` to run the report worker, simplifying commands and preventing path errors. Error handling checks for detailed information before logging or re-raising, and the report worker now imports directly from the top-level `db` package, reducing coupling.


# Frontend
<!--- Tag: [cmvm/25.06.01](https://github.com/validmind/frontend/releases/tag/cmvm/25.06.01) --->
<!--- Compare API call: gh api repos/validmind/frontend/compare/b8bf52856a0baecb990b075bd2eeeadc89dcc0dc...b8bf52856a0baecb990b075bd2eeeadc89dcc0dc --->

## Enhancements


<!--- PR #1434: https://github.com/validmind/frontend/pull/1434 --->
<!--- Labels: enhancement --->
### Upload `sourcemaps` to Datadog and Sentry without deploying (#1434)

You can now upload JavaScript sourcemaps to Datadog and Sentry using a new `npm` script that runs automatically during the production Docker build. The updated GitHub Actions workflow provides the necessary variables and then removes the sourcemaps from the final image to protect proprietary code.

The Dockerfile now includes a `sourcemaps-upload` stage that runs `scripts/sourcemaps-upload.sh`. This script uses build secrets for Datadog and Sentry API keys, validates necessary environment variables, uploads generated sourcemaps to both services, and transfers the compiled output to the production stage. Sourcemap files are deleted from the final image to protect source code.

Frontend Sentry initialization now includes the current release version, ensuring uploaded sourcemaps align with production errors.


<!--- PR #1407: https://github.com/validmind/frontend/pull/1407 --->
<!--- Labels: enhancement --->
### Allow customization of finding statuses in the UI (#1407)

You can now customize finding statuses by creating new ones or soft-deleting existing ones. When a status is deleted, any findings assigned to it automatically revert to `Open`.

You can now manage finding statuses. New API endpoints allow you to fetch, create, update, and delete each status, which includes an ID, name, color scheme, and default flag. The UI introduces an `AddFindingStatusModal` with a color grid selector and restricts name edits for default statuses. Findings lists and detail views display statuses using `VMTag` with their assigned colors. Settings pages now use a unified `SettingsSection` layout and feature a permission-gated sidebar link for managing finding statuses.


<!--- # Agents --->
<!--- Tag cmvm/25.06.01 not found in agents repository --->
<!-- No tag found in this repository -->

<!--- # Installation --->
<!--- Tag cmvm/25.06.01 not found in installation repository --->
<!-- No tag found in this repository -->

<!--- # Documentation --->
<!--- Tag cmvm/25.06.01 not found in documentation repository --->
<!-- No tag found in this repository -->

<!--- # Validmind-library --->
<!--- Tag cmvm/25.06.01 not found in validmind-library repository --->
<!-- No tag found in this repository -->
