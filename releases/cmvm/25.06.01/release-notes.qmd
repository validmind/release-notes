---
title: "25.06.01 Hotfix release notes"
date: "June 05, 2025"
categories: [cmvm, 25.06.01, hotfix]
sidebar: release-notes
toc-expand: true
# Content edited by AI - 2025-06-08 18:17
# Content overwritten from an earlier version - 2025-06-08 18:17
---

This release includes the ability to configure `finding statuses` via the API, export organization `custom_fields` in templates, and upload sourcemaps to `Datadog` and `Sentry` without deploying.

# Backend
<!--- Tag: [cmvm/25.06.01](https://github.com/validmind/backend/releases/tag/cmvm/25.06.01) --->
<!--- Compare API call: gh api repos/validmind/backend/compare/dff41c635ccf1fc06e135076d086978769c8ce33...dff41c635ccf1fc06e135076d086978769c8ce33 --->

## Enhancements


<!--- PR #1499: https://github.com/validmind/backend/pull/1499 --->
<!--- Labels: enhancement --->
### Enable configuration of `finding statuses` via the API (#1499)

Users can now customize finding statuses on the Settings page, enabling them to define their own `finding status` values for improved interaction with the platform.

This update introduces a feature for managing the status of findings, allowing organizations to define custom statuses like open, closed, and deleted. It includes a new database table and model for finding statuses.

Key changes:

- A migration script creates a `finding_statuses` table and adds a `status_id` column to the `findings` table, backfilling existing findings and removing the deprecated column.

- The `Finding` model now uses a foreign key relationship to the `FindingStatus` model, affecting serialization, creation, updating, and deletion processes.

- A `FindingStatus` model is introduced with methods for creating, updating, deleting, and loading default statuses, including helper methods like serialization and `mark_as_deleted`.

- New API endpoints for retrieving, creating, updating, and deleting finding statuses, with validations for duplicate names and permission enforcement using the `requires_auth` decorator.

- Updates to related routes, including UI, reporting, and SQL views, to use the new `FindingStatus` table.

- Modifications to organization templates and platform configurations to incorporate finding statuses.

- Adjustments to unit tests to cover the new functionality for creating, updating, and deleting finding statuses as part of finding CRUD operations.

This integration enhances data integrity by adopting a relational approach and extends API interfaces for improved UI interaction.


<!--- PR #1448: https://github.com/validmind/backend/pull/1448 --->
<!--- Labels: enhancement, python --->
### Export organization `custom_fields` in templates (#1448)

Custom fields are now included in the exported organization template. These fields are automatically added when creating a new organization, simplifying the setup process.

This update enhances custom fields and template processing in organization and inventory model management. Key improvements include a new `sanitize_custom_fields` method for inventory model serialization, filtering out empty or invalid custom field values. Organization template serialization now uses these sanitized fields for cleaner data. The organization creation workflow ensures proper propagation of custom fields. Inventory model retrieval is streamlined with a database filter, and template serialization now uses the latest version data. Minor formatting and logging improvements are also included.

- A new static method, `sanitize_custom_fields`, is added to inventory model serialization. It filters out empty fields, values marked as 'null' or 'n/a' (case insensitive), and values starting with 'err:', ensuring only valid custom field values are included in the serialized output of organization templates.

- The serialization method for organization templates now incorporates these sanitized custom fields, resulting in more consistent and clean data.

- In the organization creation workflow, after setting up a new organization, the system retrieves a user from the new organization and triggers field update events for custom fields, ensuring proper propagation to related inventory models.

- Inventory model retrieval is improved by using a database filter to retrieve models by their `cuid`, streamlining the query and error handling process.

- Template serialization in the template model now uses the latest version data, allowing for better handling of versioned template data.

- Minor formatting adjustments and improvements in logging and error message consistency have been implemented.

<!-- ### Changes with no label -->


<!--- PR #1563: https://github.com/validmind/backend/pull/1563 --->
<!--- Labels: none --->
<!--- ### Merge `main` into `staging-1.30.16` (#1563) --->
<!-- Merge PR - not included in release notes. -->


<!--- PR #1564: https://github.com/validmind/backend/pull/1564 --->
<!--- Labels: none --->
<!--- ### Merge `staging` into `prod` for version 1.30.16 (#1564) --->
<!-- Merge PR - not included in release notes. -->


<!--- PR #1557: https://github.com/validmind/backend/pull/1557 --->
<!--- Labels: none --->
<!--- ### Merge `main` into `staging-1.30.16` (#1557) --->
<!-- Merge PR - not included in release notes. -->


<!--- PR #1555: https://github.com/validmind/backend/pull/1555 --->
<!--- Labels: none --->
<!--- ### Merge `main` into `staging` (#1555) --->
<!-- Merge PR - not included in release notes. -->


<!--- PR #1558: https://github.com/validmind/backend/pull/1558 --->
<!--- Labels: none --->
<!--- ### Merge `staging` into `prod` for version `1.30.16` (#1558) --->
<!-- Merge PR - not included in release notes. -->


<!--- PR #1560: https://github.com/validmind/backend/pull/1560 --->
<!--- Labels: none --->
<!--- ### Merge `main` into `staging-1.30.16` (#1560) --->
<!-- Merge PR - not included in release notes. -->


<!--- PR #1534: https://github.com/validmind/backend/pull/1534 --->
<!--- Labels: none --->
<!--- ### Merge `prod deploy` workflows and relocate them (#1534) --->
<!-- Merge PR - not included in release notes. -->


<!--- PR #1561: https://github.com/validmind/backend/pull/1561 --->
<!--- Labels: none --->
<!--- ### Merge `staging` into `prod-1.30.16` (#1561) --->
<!-- Merge PR - not included in release notes. -->


<!--- PR #1407: https://github.com/validmind/backend/pull/1407 --->
<!--- Labels: none --->
<!--- ### Merge `litellm` Dockerfiles (#1407) --->
<!-- Merge PR - not included in release notes. -->


<!--- PR #1546: https://github.com/validmind/backend/pull/1546 --->
<!--- Labels: none --->
### Enhance `PYTHONPATH` for API and worker processes (#1546)

`PYTHONPATH` ensures scripts run with the application's original base path, allowing code dependencies to load correctly, especially with relative imports. This is achieved using module calling syntax. If `PYTHONPATH` is not used, alternative import strategies can be considered.

Error message handling has been improved. Previously, error messages were not visible on the console or in the HTTP response. Now, errors are displayed correctly. For example, if there is an internal error, the response will include details such as:

```
{
    "error": {
        "code": "INTERNAL_ERROR",
        "message": "Failed to generate monitoring report",
        "details": {
            "error": "/Users/andres/code/backend/.venv/bin/python3: Error while finding module specification for 'workers.report_worker' (ModuleNotFoundError: No module named 'workers')\n"
        },
        "user_response": "Please search for INTERNAL_ERROR in the documentation for troubleshooting information.",
        "status": 500
    },
    "message": "Failed to generate monitoring report"
}
```

The logs will also reflect these errors, providing a clear message such as:

```
2025-06-04T10:20:40.062556 [error] Error generating monitoring report: /Users/andres/code/backend/.venv/bin/python3: Error while finding module specification for 'workers.report_worker' (ModuleNotFoundError: No module named 'workers')
```

This update enhances the API and worker processes for improved robustness and maintainability:

- The `Makefile` now includes the current backend source directory in the `PYTHONPATH` when running the API, ensuring explicit module resolution and avoiding path issues.

- The UI reporting route uses module syntax with the `-m` flag to invoke the report worker, simplifying command line invocation and preventing path resolution issues. Error handling is improved by checking for detailed error information before logging and propagating errors.

- Import statements in the report worker file have been refactored to import directly from the `db` package, replacing deeply nested module paths. This change streamlines dependencies and enhances maintainability.


# Frontend
<!--- Tag: [cmvm/25.06.01](https://github.com/validmind/frontend/releases/tag/cmvm/25.06.01) --->
<!--- Compare API call: gh api repos/validmind/frontend/compare/b8bf52856a0baecb990b075bd2eeeadc89dcc0dc...b8bf52856a0baecb990b075bd2eeeadc89dcc0dc --->

## Enhancements


<!--- PR #1434: https://github.com/validmind/frontend/pull/1434 --->
<!--- Labels: enhancement --->
### Enable sourcemap uploads to `Datadog` and `Sentry` without deploying (#1434)

This update enhances debugging by incorporating an `npm` command to upload sourcemaps to Datadog and Sentry during the `prod` Docker image build. Sourcemaps are removed from the final build to protect proprietary information. For more details, refer to the documentation for [Datadog sourcemap](https://docs.datadoghq.com/real_user_monitoring/guide/upload-javascript-source-maps/), [Sentry sourcemap](https://docs.sentry.io/platforms/javascript/sourcemaps/uploading/cli/), and [Sentry release](https://docs.sentry.io/cli/releases/). A related GitHub Actions update is required for new build variables, as detailed in https://github.com/validmind/backend/pull/1539.

- Adds the ability to upload sourcemaps to Datadog and/or Sentry.

This update introduces a multi-stage Docker build to enhance error tracking and debugging in production by managing sourcemap uploads. A new build stage, `sourcemaps-upload`, securely handles API keys for Datadog and Sentry using build secrets. A custom NPM script, `sourcemaps-upload`, checks environment variables and uploads sourcemaps. The production stage now copies build output from this stage and removes sourcemap files to protect source details. Sentry initialization is updated to include the release version.

Functional changes include:

- A new Docker build stage for sourcemap uploads.
- Automated sourcemap uploads via Datadog and Sentry APIs.
- Updated package scripts and added development dependencies.
- Sentry initialization now includes the release version.


<!--- PR #1407: https://github.com/validmind/frontend/pull/1407 --->
<!--- Labels: enhancement --->
### Allow users to customize `finding` statuses in the UI (#1407)

This update enables users to customize finding statuses by:

- Creating new finding statuses.
- Soft-deleting existing finding statuses.
- Defaulting all findings to `Open` if their status is deleted.

This update introduces a feature for managing finding statuses, including new API endpoints for fetching, creating, updating, and deleting these statuses. The data model now includes a new type for finding status with a unique identifier, color scheme, name, and default flag.

New UI components, such as the `AddFindingStatusModal`, support this functionality. The modal uses a shared color grid selector for color schemes and manages default statuses by disabling name edits. The main application and settings pages have been updated to integrate the new finding statuses, with a new sidebar link for users with the appropriate permissions. Existing components, like findings lists and detailed views, now use these new statuses and display them with the updated design, such as the `VMTag` component with colors from the status data.

Several settings pages were refactored to use a new `SettingsSection` layout, ensuring a consistent look and feel across the application. This update integrates the new finding statuses feature on both the backend (via API enhancements) and the frontend (via component and layout updates).

<!-- ### Changes with no label -->


<!--- PR #1446: https://github.com/validmind/frontend/pull/1446 --->
<!--- Labels: none --->
<!--- ### Merge `staging` into `prod` for `1.36.3` (#1446) --->
<!-- Merge PR - not included in release notes. -->


<!--- PR #1445: https://github.com/validmind/frontend/pull/1445 --->
<!--- Labels: none --->
<!--- ### Merge `main` into `staging` for version `1.36.3` (#1445) --->
<!-- Merge PR - not included in release notes. -->


<!--- # Agents --->
<!--- Tag cmvm/25.06.01 not found in agents repository --->
<!-- No tag found in this repository -->

<!--- # Installation --->
<!--- Tag cmvm/25.06.01 not found in installation repository --->
<!-- No tag found in this repository -->

# Documentation
<!--- Tag: [cmvm/25.06.01](https://github.com/validmind/documentation/releases/tag/cmvm/25.06.01) --->
<!--- Compare API call: gh api repos/validmind/documentation/compare/20af028d3131d40d1a545bcbf0e2eddc31a724f0...20af028d3131d40d1a545bcbf0e2eddc31a724f0 --->

<!-- ### Changes with no label -->


<!--- PR #733: https://github.com/validmind/documentation/pull/733 --->
<!--- Labels: none --->
<!--- ### Merge `main` into `staging` (#733) --->
<!-- Merge PR - not included in release notes. -->


<!--- PR #741: https://github.com/validmind/documentation/pull/741 --->
<!--- Labels: none --->
<!--- ### Merge `main` into `staging` (#741) --->
<!-- Merge PR - not included in release notes. -->


<!--- PR #736: https://github.com/validmind/documentation/pull/736 --->
<!--- Labels: none --->
<!--- ### Merge `main` into `staging` (#736) --->
<!-- Merge PR - not included in release notes. -->


<!--- PR #730: https://github.com/validmind/documentation/pull/730 --->
<!--- Labels: none --->
<!--- ### Merge `main` into `staging` (#730) --->
<!-- Merge PR - not included in release notes. -->


<!--- PR #738: https://github.com/validmind/documentation/pull/738 --->
<!--- Labels: none --->
<!--- ### Merge `main` into `staging` (#738) --->
<!-- Merge PR - not included in release notes. -->


<!--- PR #739: https://github.com/validmind/documentation/pull/739 --->
<!--- Labels: none --->
<!--- ### Merge `main` into `staging` (#739) --->
<!-- Merge PR - not included in release notes. -->


<!--- # Validmind-library --->
<!--- Tag cmvm/25.06.01 not found in validmind-library repository --->
<!-- No tag found in this repository -->
