---
title: "25.06.01 Hotfix release notes"
date: "June 05, 2025"
categories: [cmvm, 25.06.01, hotfix]
sidebar: release-notes
toc-expand: true
# Content edited by AI - 2025-06-10 17:17
# Content overwritten from an earlier version - 2025-06-10 17:17
---

This release includes the ability to configure finding statuses via the API, export organization custom fields, and upload sourcemaps to Datadog and Sentry without deployment. The UI now allows users to customize finding statuses, and more.

<!-- WARNING: Summary may not mention an enhancement PR -->

# Backend
<!--- Tag: [cmvm/25.06.01](https://github.com/validmind/backend/releases/tag/cmvm/25.06.01) --->
<!--- Compare API call: gh api repos/validmind/backend/compare/dff41c635ccf1fc06e135076d086978769c8ce33...dff41c635ccf1fc06e135076d086978769c8ce33 --->

## Enhancements


<!--- PR #1499: https://github.com/validmind/backend/pull/1499 --->
<!--- Labels: enhancement --->
### Enable configuration of finding statuses via the `API` (#1499)

Users can now customize status settings on the Settings page, enabling them to define their own status values for enhanced platform interaction.

This update introduces a feature for managing finding statuses, allowing organizations to define custom statuses like open, closed, or deleted.

- A migration script creates a `finding_statuses` table and adds a `status_id` column to the existing findings table. It backfills existing findings with old status values and removes the deprecated column.

- The `Finding` model now uses a foreign key relationship to the `FindingStatus` model, replacing the string-based status field. This change affects serialization, creation, updating, and deletion processes for proper status management.

- A new `FindingStatus` model is introduced, including methods for creating, updating, deleting, and loading default statuses for an organization. It also provides helper methods like serialization and `mark_as_deleted`.

- API changes include new endpoints for retrieving, creating, updating, and deleting finding statuses. These endpoints validate duplicate status names and enforce permissions using the `requires_auth` decorator.

- Related routes, including UI, reporting, and SQL views, are updated to join and filter using the `FindingStatus` table.

- Organization templates and platform configurations are modified to incorporate finding statuses.

- Unit tests are adjusted to cover the new functionality for creating, updating, and deleting finding statuses as part of finding CRUD operations.

This integration enhances data integrity by adopting a relational approach and extends API interfaces for improved UI interaction.


<!--- PR #1448: https://github.com/validmind/backend/pull/1448 --->
<!--- Labels: enhancement, python --->
### Export organization `custom_fields` (#1448)

The update improves the organization template export feature by including custom fields. These fields are automatically added when creating a new organization using the template, streamlining the setup process. There are no breaking changes.

This update improves custom field management and template processing in organization and inventory models.

- The `sanitize_custom_fields` static method is added to inventory model serialization. It filters out empty fields, values marked as 'null' or 'n/a' (case insensitive), and values starting with 'err:', ensuring only valid custom field values are included.

- After setting up a new organization, a user is retrieved from the organization, triggering field update events for custom fields to ensure proper propagation to related inventory models.

- Inventory model retrieval now uses a database filter instead of a list comprehension to retrieve models by `cuid`, improving query efficiency and error handling.

- Template serialization now uses the latest version data for better handling of versioned template data.

- Minor formatting adjustments and improvements in logging and error message consistency have been implemented.

<!-- ### Changes with no label -->


<!--- PR #1557: https://github.com/validmind/backend/pull/1557 --->
<!--- Labels: none --->
<!--- ### Merge `main` into `staging-1.30.16` (#1557) --->
<!-- Merge PR - not included in release notes. -->


<!--- PR #1561: https://github.com/validmind/backend/pull/1561 --->
<!--- Labels: none --->
<!--- ### Merge `staging` into `production` version `prod-1.30.16` (#1561) --->
<!-- Merge PR - not included in release notes. -->


<!--- PR #1558: https://github.com/validmind/backend/pull/1558 --->
<!--- Labels: none --->
<!--- ### Merge `staging` into `prod` for version 1.30.16 (#1558) --->
<!-- Merge PR - not included in release notes. -->


<!--- PR #1534: https://github.com/validmind/backend/pull/1534 --->
<!--- Labels: none --->
<!--- ### Merge `production` deploy workflows and relocate them (#1534) --->
<!-- Merge PR - not included in release notes. -->


<!--- PR #1555: https://github.com/validmind/backend/pull/1555 --->
<!--- Labels: none --->
<!--- ### Merge `main` into `staging` (#1555) --->
<!-- Merge PR - not included in release notes. -->


<!--- PR #1560: https://github.com/validmind/backend/pull/1560 --->
<!--- Labels: none --->
<!--- ### Merge `main` into `staging-1.30.16` (#1560) --->
<!-- Merge PR - not included in release notes. -->


<!--- PR #1563: https://github.com/validmind/backend/pull/1563 --->
<!--- Labels: none --->
<!--- ### Merge `main` into `staging` for version `1.30.16` (#1563) --->
<!-- Merge PR - not included in release notes. -->


<!--- PR #1564: https://github.com/validmind/backend/pull/1564 --->
<!--- Labels: none --->
<!--- ### Merge `staging` into `production` for `prod-1.30.16` (#1564) --->
<!-- Merge PR - not included in release notes. -->


<!--- PR #1407: https://github.com/validmind/backend/pull/1407 --->
<!--- Labels: none --->
<!--- ### Merge `litellm` dockerfiles (#1407) --->
<!-- Merge PR - not included in release notes. -->


<!--- PR #1546: https://github.com/validmind/backend/pull/1546 --->
<!--- Labels: none --->
### Enhance `PYTHONPATH` handling for API and worker processes (#1546)

`PYTHONPATH` ensures scripts run with the application's original base path, allowing code dependencies to load correctly, especially with relative imports.

Error messages now display correctly on the console and in the HTTP response, including the error code, message, and user guidance. The status code is 500, with details specifying the issue, such as a `ModuleNotFoundError`.

Logs show detailed error messages when generating monitoring reports, including a timestamp and error description.

This update enhances the API and worker processes:

- The `Makefile` command for running the API now includes the current backend source directory in the `PYTHONPATH`, ensuring explicit module resolution and avoiding path issues.

- The UI reporting route now uses module syntax with the `-m` flag to invoke the report worker, simplifying command line use and preventing path resolution issues. Error handling is improved by checking for detailed error information before logging and propagating errors.

- Import statements in the report worker file have been refactored to import directly from the `db` package, streamlining dependencies and improving maintainability.


# Frontend
<!--- Tag: [cmvm/25.06.01](https://github.com/validmind/frontend/releases/tag/cmvm/25.06.01) --->
<!--- Compare API call: gh api repos/validmind/frontend/compare/b8bf52856a0baecb990b075bd2eeeadc89dcc0dc...b8bf52856a0baecb990b075bd2eeeadc89dcc0dc --->

## Enhancements


<!--- PR #1434: https://github.com/validmind/frontend/pull/1434 --->
<!--- Labels: enhancement --->
### Upload `sourcemaps` to Datadog and Sentry without deployment (#1434)

The `npm` command now uploads sourcemaps to Datadog and Sentry during the production Docker image build. Sourcemaps are removed from the final build to protect proprietary information.

For more details, see the documentation for [Datadog sourcemap](https://docs.datadoghq.com/real_user_monitoring/guide/upload-javascript-source-maps/), [Sentry sourcemap](https://docs.sentry.io/platforms/javascript/sourcemaps/uploading/cli/), and [Sentry release](https://docs.sentry.io/cli/releases/).

A related update in GitHub Actions, as detailed in https://github.com/validmind/backend/pull/1539, is required for the new variables needed during the build process.

The update introduces a multi-stage Docker build to manage sourcemap uploads, enhancing error tracking and debugging in production. The `sourcemaps-upload` build stage securely handles API keys for Datadog and Sentry using build secrets. It employs a custom NPM script (`sourcemaps-upload`) defined in the package configuration and implemented in `scripts/sourcemaps-upload.sh`. This script checks for required environment variables and conditionally uploads sourcemaps to Datadog and Sentry.

The production stage copies the build output from the sourcemaps upload stage and removes sourcemap files from the final container to prevent exposure of source details. Sentry initialization in the frontend application now includes the current release version, aiding in correlating sourcemap data with application versions.

Functional changes include:

- A Docker build stage for uploading sourcemaps.
- Integration with Datadog and Sentry APIs for automated sourcemap uploads.
- Updates to package scripts and addition of necessary development dependencies.
- Modification of Sentry initialization to include the release version.


<!--- PR #1407: https://github.com/validmind/frontend/pull/1407 --->
<!--- Labels: enhancement --->
### UI allows users to customize `finding` statuses (#1407)

Users can now create custom finding statuses and soft-delete existing ones. When a status is deleted, all associated findings revert to `Open`.

This update adds a feature for managing finding statuses, including API endpoints for fetching, creating, updating, and deleting these statuses. The data model now includes a type for finding status with a unique identifier, color scheme, name, and default flag.

New UI components support this functionality, such as a modal (`AddFindingStatusModal`) with a shared color grid selector for choosing color schemes. The modal manages default statuses by disabling edits on their names. The main application and settings pages now integrate the new finding statuses, with a sidebar link for users with appropriate permissions. Existing components that display finding statuses now use these new statuses and display them with the updated design, employing a `VMTag` component with colors derived from the status data.

Several settings pages have been refactored to use a new `SettingsSection` layout, ensuring a consistent look and feel across the application.

<!-- ### Changes with no label -->


<!--- PR #1445: https://github.com/validmind/frontend/pull/1445 --->
<!--- Labels: none --->
<!--- ### Merge `main` into `staging` for version 1.36.3 (#1445) --->
<!-- Merge PR - not included in release notes. -->


<!--- PR #1446: https://github.com/validmind/frontend/pull/1446 --->
<!--- Labels: none --->
<!--- ### Merge `staging` into `production` version `1.36.3` (#1446) --->
<!-- Merge PR - not included in release notes. -->


<!--- # Agents --->
<!--- Tag cmvm/25.06.01 not found in agents repository --->
<!-- No tag found in this repository -->

<!--- # Installation --->
<!--- Tag cmvm/25.06.01 not found in installation repository --->
<!-- No tag found in this repository -->

<!--- # Documentation --->
<!--- Tag: [cmvm/25.06.01](https://github.com/validmind/documentation/releases/tag/cmvm/25.06.01) --->
<!--- Compare API call: gh api repos/validmind/documentation/compare/20af028d3131d40d1a545bcbf0e2eddc31a724f0...20af028d3131d40d1a545bcbf0e2eddc31a724f0 --->
<!-- No public PRs found for this release -->

<!--- # Validmind-library --->
<!--- Tag cmvm/25.06.01 not found in validmind-library repository --->
<!-- No tag found in this repository -->
