---
title: "25.06.01 Hotfix release notes"
date: "June 06, 2025"
categories: [cmvm, 25.06.01, hotfix]
sidebar: release-notes
toc-expand: true
# Content edited by AI - 2025-06-09 16:40
# Content overwritten from an earlier version - 2025-06-09 16:40
---

This release includes the ability to configure `finding statuses` via the API, export organization `custom_fields`, upload `sourcemaps` to Datadog and Sentry without deployment, and customize `finding` statuses in the UI.

# Backend
<!--- Tag: [cmvm/25.06.01](https://github.com/validmind/backend/releases/tag/cmvm/25.06.01) --->
<!--- Compare API call: gh api repos/validmind/backend/compare/dff41c635ccf1fc06e135076d086978769c8ce33...dff41c635ccf1fc06e135076d086978769c8ce33 --->

## Enhancements


<!--- PR #1499: https://github.com/validmind/backend/pull/1499 --->
<!--- Labels: enhancement --->
### Configure `finding statuses` through the API (#1499)

Users can now customize `finding status` values on the Settings page for a personalized experience.

This update adds a feature for managing finding statuses, allowing organizations to define custom statuses like open, closed, or deleted.

A migration script creates a `finding_statuses` table and adds a `status_id` column to the `findings` table. Existing findings are backfilled with old status values, and the deprecated column is removed. The `Finding` model now uses a foreign key to the `FindingStatus` model, affecting serialization, creation, updating, and deletion processes for status management.

A new `FindingStatus` model is introduced, with methods to create, update, delete, and load default statuses for an organization. It includes helper methods like serialization and `mark_as_deleted`. API changes add new endpoints for managing finding statuses, with validations for duplicate status names and enforced permissions using the `requires_auth` decorator.

Related routes, including UI, reporting, and SQL views, are updated to join and filter against the new `FindingStatus` table. Organization templates and platform configurations are updated to incorporate finding statuses. Unit tests are modified to test the new functionality for creating, updating, and deleting finding statuses as part of finding CRUD operations.

This integration enhances data integrity by adopting a relational approach and extends API interfaces for improved UI interaction.


<!--- PR #1448: https://github.com/validmind/backend/pull/1448 --->
<!--- Labels: enhancement, python --->
### Export organization `custom_fields` (#1448)

The update improves the organization template export feature by adding custom fields. When a new organization is created using this template, these custom fields are automatically included, simplifying the setup process for customers. There are no breaking changes with this update.

This update improves custom fields and template processing in organization and inventory model management.

- The `sanitize_custom_fields` method now filters out empty fields, 'null' or 'n/a' values (case insensitive), and values starting with 'err:', ensuring only valid custom field values are included in organization template serialization.

- After setting up a new organization, the system retrieves a user and triggers field update events for custom fields, ensuring proper propagation to related inventory models.

- Inventory models are retrieved using a database filter by `cuid`, streamlining queries and error handling.

- Template serialization uses the latest version data for better handling of versioned template data.

- Minor formatting adjustments and improvements in logging and error message consistency have been implemented.

<!-- ### Changes with no label -->


<!--- PR #1558: https://github.com/validmind/backend/pull/1558 --->
<!--- Labels: none --->
<!--- ### Merge staging into production `prod-1.30.16` (#1558) --->
<!-- Merge PR - not included in release notes. -->


<!--- PR #1555: https://github.com/validmind/backend/pull/1555 --->
<!--- Labels: none --->
<!--- ### Merge `main` into `staging` (#1555) --->
<!-- Merge PR - not included in release notes. -->


<!--- PR #1534: https://github.com/validmind/backend/pull/1534 --->
<!--- Labels: none --->
<!--- ### Merge `production` deployment workflows and relocate them (#1534) --->
<!-- Merge PR - not included in release notes. -->


<!--- PR #1560: https://github.com/validmind/backend/pull/1560 --->
<!--- Labels: none --->
<!--- ### Merge `main` into `staging-1.30.16` (#1560) --->
<!-- Merge PR - not included in release notes. -->


<!--- PR #1557: https://github.com/validmind/backend/pull/1557 --->
<!--- Labels: none --->
<!--- ### Merge `main` into `staging` for version `1.30.16` (#1557) --->
<!-- Merge PR - not included in release notes. -->


<!--- PR #1563: https://github.com/validmind/backend/pull/1563 --->
<!--- Labels: none --->
<!--- ### Merge `main` into `staging` for version `1.30.16` (#1563) --->
<!-- Merge PR - not included in release notes. -->


<!--- PR #1561: https://github.com/validmind/backend/pull/1561 --->
<!--- Labels: none --->
<!--- ### Merge `staging` into `production` for version `prod-1.30.16` (#1561) --->
<!-- Merge PR - not included in release notes. -->


<!--- PR #1564: https://github.com/validmind/backend/pull/1564 --->
<!--- Labels: none --->
<!--- ### Merge `staging` into `prod-1.30.16` (#1564) --->
<!-- Merge PR - not included in release notes. -->


<!--- PR #1407: https://github.com/validmind/backend/pull/1407 --->
<!--- Labels: none --->
<!--- ### Merge `litellm` Dockerfiles (#1407) --->
<!-- Merge PR - not included in release notes. -->


<!--- PR #1546: https://github.com/validmind/backend/pull/1546 --->
<!--- Labels: none --->
### Enhance `PYTHONPATH` for module resolution and error logging (#1546)

The `PYTHONPATH` environment variable now ensures scripts run with the application's original base path, aiding in the correct loading of code dependencies, especially for relative imports.

Error messages are now clearly displayed in both the console and HTTP responses:

```
{
    "error": {
        "code": "INTERNAL_ERROR",
        "message": "Failed to generate monitoring report",
        "details": {
            "error": "/Users/andres/code/backend/.venv/bin/python3: Error while finding module specification for 'workers.report_worker' (ModuleNotFoundError: No module named 'workers')\n"
        },
        "user_response": "Please search for INTERNAL_ERROR in the documentation for troubleshooting information.",
        "status": 500
    },
    "message": "Failed to generate monitoring report"
}
```

Logs now accurately capture errors:

```
2025-06-04T10:20:40.062556 [error] Error generating monitoring report: /Users/andres/code/backend/.venv/bin/python3: Error while finding module specification for 'workers.report_worker' (ModuleNotFoundError: No module named 'workers')
```

Consider alternative import strategies if not using `PYTHONPATH`.

This update improves the API and worker processes for better robustness and maintainability:

- The `Makefile` command for running the API now includes the current backend source directory in the `PYTHONPATH`, ensuring explicit module resolution and avoiding path issues.

- The UI reporting route uses module syntax with the `-m` flag to invoke the report worker, simplifying command line use and preventing path resolution issues. Error handling now checks for detailed error information before logging and propagating errors.

- Import statements in the report worker file have been refactored to import directly from the `db` package, streamlining module dependencies and enhancing maintainability.


# Frontend
<!--- Tag: [cmvm/25.06.01](https://github.com/validmind/frontend/releases/tag/cmvm/25.06.01) --->
<!--- Compare API call: gh api repos/validmind/frontend/compare/b8bf52856a0baecb990b075bd2eeeadc89dcc0dc...b8bf52856a0baecb990b075bd2eeeadc89dcc0dc --->

## Enhancements


<!--- PR #1434: https://github.com/validmind/frontend/pull/1434 --->
<!--- Labels: enhancement --->
### Upload `sourcemaps` to Datadog and Sentry without deployment (#1434)

This update enhances sourcemap management:

- An `npm` command uploads sourcemaps to Datadog and Sentry for debugging during the `prod` Docker image build.
- Sourcemaps are removed from the final build to protect proprietary information.

For more details, see the documentation for [Datadog sourcemap](https://docs.datadoghq.com/real_user_monitoring/guide/upload-javascript-source-maps/), [Sentry sourcemap](https://docs.sentry.io/platforms/javascript/sourcemaps/uploading/cli/), and [Sentry release](https://docs.sentry.io/cli/releases/).

Note: GitHub Actions have been updated to include new variables needed during the build process.

The update introduces a multi-stage Docker build process to manage sourcemap uploads, enhancing error tracking and debugging. A new `sourcemaps-upload` build stage securely handles API keys for Datadog and Sentry using build secrets. This stage uses a custom NPM script (`sourcemaps-upload`) defined in the package configuration and executed via the `scripts/sourcemaps-upload.sh` file. The script checks for necessary environment variables and conditionally uploads sourcemaps to Datadog and Sentry.

Key changes include:

- A Docker build stage for sourcemap uploads.
- Integration with Datadog and Sentry APIs for automated uploads.
- Updates to package scripts and addition of necessary development dependencies.
- Modifications to Sentry initialization in the frontend application to include the current release version, aiding in correlating sourcemap data with application versions.

The production stage now copies the build output from the sourcemaps upload stage and removes sourcemap files from the final container to prevent exposure of source details.


<!--- PR #1407: https://github.com/validmind/frontend/pull/1407 --->
<!--- Labels: enhancement --->
### Allow users to customize `finding` statuses in the UI (#1407)

Users can now customize finding statuses by creating new ones and deleting existing ones. When a status is deleted, associated findings will revert to `Open`.

This update introduces a feature for managing finding statuses, including API endpoints for fetching, creating, updating, and deleting them. The data model now includes a type for finding status with a unique identifier, color scheme, name, and default flag.

New UI components support this functionality, such as a modal (`AddFindingStatusModal`) with a shared color grid selector for choosing color schemes. The modal manages default statuses by disabling edits on their names. The main application and settings pages now integrate the new finding statuses, with a new sidebar link for users with appropriate permissions. Existing components that display finding statuses now use these new statuses and display them using the updated design, utilizing a `VMTag` component with colors derived from the status data.

Several settings pages were refactored to use a new `SettingsSection` layout, ensuring a consistent look and feel across the application.

<!-- ### Changes with no label -->


<!--- PR #1445: https://github.com/validmind/frontend/pull/1445 --->
<!--- Labels: none --->
<!--- ### Merge `main` into `staging` for version `1.36.3` (#1445) --->
<!-- Merge PR - not included in release notes. -->


<!--- PR #1446: https://github.com/validmind/frontend/pull/1446 --->
<!--- Labels: none --->
<!--- ### Merge `staging` into `prod` for version `1.36.3` (#1446) --->
<!-- Merge PR - not included in release notes. -->


<!--- # Agents --->
<!--- Tag cmvm/25.06.01 not found in agents repository --->
<!-- No tag found in this repository -->

<!--- # Installation --->
<!--- Tag cmvm/25.06.01 not found in installation repository --->
<!-- No tag found in this repository -->

<!--- # Documentation --->
<!--- Tag: [cmvm/25.06.01](https://github.com/validmind/documentation/releases/tag/cmvm/25.06.01) --->
<!--- Compare API call: gh api repos/validmind/documentation/compare/20af028d3131d40d1a545bcbf0e2eddc31a724f0...20af028d3131d40d1a545bcbf0e2eddc31a724f0 --->
<!-- No public PRs found for this release -->

<!--- # Validmind-library --->
<!--- Tag cmvm/25.06.01 not found in validmind-library repository --->
<!-- No tag found in this repository -->
