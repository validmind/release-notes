---
title: "25.06.01 Hotfix release notes"
date: "June 05, 2025"
categories: [cmvm, 25.06.01, hotfix]
sidebar: release-notes
toc-expand: true
# Content edited by AI - 2025-06-12 16:51
# Content validated by AI (temperature: 0.35) - 2025-06-12 16:51
# Content overwritten from an earlier version - 2025-06-12 16:51
---

This release includes the ability to configure finding statuses via the API, export organization custom fields, and upload sourcemaps to Datadog and Sentry without deploying. Additionally, the UI now allows for customization of finding statuses and more.

<!-- WARNING: Summary may not mention an enhancement PR -->

# Backend
<!--- Tag: [cmvm/25.06.01](https://github.com/validmind/backend/releases/tag/cmvm/25.06.01) --->
<!--- Compare API call: gh api repos/validmind/backend/compare/dff41c635ccf1fc06e135076d086978769c8ce33...dff41c635ccf1fc06e135076d086978769c8ce33 --->

## Enhancements


<!--- PR #1499: https://github.com/validmind/backend/pull/1499 --->
<!--- Labels: enhancement, highlight --->
### Configure finding statuses via the `API` (#1499)

You can now customize finding statuses on the `Settings` page, moving beyond predefined values.

You can now define custom finding statuses (e.g., `open`, `closed`, `deleted`) for each organization. This update introduces a `finding_statuses` table and replaces the `status` string field in `findings` with a foreign-key `status_id`. A migration backfills existing data and removes the old column. The updated `Finding` and new `FindingStatus` models manage serialization, default status creation, and include a `mark_as_deleted` helper. Authenticated API endpoints allow you to list, create, update, and delete statuses, with validation to prevent duplicate names. All UI views, reports, SQL queries, organization templates, and platform configurations now reference the new table, and unit tests cover complete CRUD operations.


<!--- PR #1448: https://github.com/validmind/backend/pull/1448 --->
<!--- Labels: enhancement, python --->
### Export organization `custom fields` (#1448)

Organization template exports now include `custom fields`, allowing new organizations created from a template to inherit them automatically. There are no breaking changes.

The `sanitize_custom_fields` method removes empty values, any form of `'null'` or `'n/a'`, and entries starting with `'err:'`. Organization template serialization uses this method to ensure only valid custom fields appear in the output.

When an organization is created, the system selects a user from that organization to trigger custom-field update events, applying default or template-defined fields to all related inventory models.

Inventory models are fetched by `cuid` using a direct database filter, which simplifies the query and improves error handling.

Template serialization retrieves the most recent version data instead of a static structure, with streamlined logging and error messages.

<!-- ### Changes with no label -->


<!--- PR #1546: https://github.com/validmind/backend/pull/1546 --->
<!--- Labels: none --->
### Automatically set `PYTHONPATH` for improved module resolution (#1546)

Setting `PYTHONPATH` automatically propagates the applicationâ€™s base path to spawned scripts, ensuring relative imports resolve correctly.

Error handling displays detailed information in the console, HTTP responses, and logs, including error codes, messages, and troubleshooting guidance. Issues like `ModuleNotFoundError` are fully recorded for easier debugging.

If you choose not to rely on `PYTHONPATH`, you can adopt alternative import strategies to achieve the same behavior.

This update improves API and worker robustness and maintainability. The Makefile adds the backend source directory to `PYTHONPATH`, clarifying module resolution and preventing path issues. The UI reporting route invokes the report worker with `python -m`, simplifying execution and avoiding path errors. Error handling checks for detailed information before logging and raising exceptions. Report worker imports use direct references to the `db` package, reducing dependencies.


# Frontend
<!--- Tag: [cmvm/25.06.01](https://github.com/validmind/frontend/releases/tag/cmvm/25.06.01) --->
<!--- Compare API call: gh api repos/validmind/frontend/compare/b8bf52856a0baecb990b075bd2eeeadc89dcc0dc...b8bf52856a0baecb990b075bd2eeeadc89dcc0dc --->

## Enhancements


<!--- PR #1434: https://github.com/validmind/frontend/pull/1434 --->
<!--- Labels: enhancement --->
### Upload `sourcemaps` to `Datadog` and `Sentry` without deploying (#1434)

`GitHub Actions` accepts the required build variables, allowing you to upload `sourcemaps` to `Datadog` or `Sentry` for improved error tracking.

This update introduces a `sourcemaps-upload` stage to the multi-stage Docker build. This stage executes the `sourcemaps-upload` NPM script through `scripts/sourcemaps-upload.sh`, utilizing build secrets for Datadog and Sentry API keys. It validates necessary environment variables and uploads sourcemaps to both services. In the production stage, the build output is copied, and sourcemap files are deleted to prevent source exposure. Sentry initializes with the current release version to ensure errors align with the uploaded sourcemaps.


<!--- PR #1407: https://github.com/validmind/frontend/pull/1407 --->
<!--- Labels: enhancement --->
### UI allows customization of finding statuses (#1407)

You can now create custom finding statuses and `soft-delete` them. Deleting a status automatically resets associated findings to `Open`.

You can now manage finding statuses using new API endpoints: `fetch`, `create`, `update`, and `delete`. The expanded data model includes an ID, name, color scheme, and default flag.

The UI introduces `AddFindingStatusModal` with a shared color grid. Names of default statuses are read-only. Findings lists, detail views, and settings pages display statuses using `VMTag`. A sidebar link is available for roles with permission. All affected settings pages use the unified `SettingsSection` layout.


<!--- # Agents --->
<!--- Tag cmvm/25.06.01 not found in agents repository --->
<!-- No tag found in this repository -->

<!--- # Installation --->
<!--- Tag cmvm/25.06.01 not found in installation repository --->
<!-- No tag found in this repository -->

<!--- # Documentation --->
<!--- Tag cmvm/25.06.01 not found in documentation repository --->
<!-- No tag found in this repository -->

<!--- # Validmind-library --->
<!--- Tag cmvm/25.06.01 not found in validmind-library repository --->
<!-- No tag found in this repository -->
